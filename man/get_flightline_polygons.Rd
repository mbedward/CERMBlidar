% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flightline_functions.R
\name{get_flightline_polygons}
\alias{get_flightline_polygons}
\title{Create convex polygons for flight lines}
\usage{
get_flightline_polygons(las, classes = 2:5, group_classes = FALSE)
}
\arguments{
\item{las}{A LAS object, e.g. imported using \code{prepare_tile}.}

\item{classes}{Vector of one or more integer codes for point classes to
consider. Default is \code{2:5} (ground and vegetation).}

\item{group_classes}{If \code{TRUE}, separate polygons will be created for
each combination of flight line and point class. If \code{FALSE} (default),
a single polygon is created for each flight line.}
}
\value{
An \code{sf} data frame with columns \code{flightlineID},
  \code{Classification} (if \code{group_classes} is \code{TRUE}), and
  \code{group_classes}. The coordinate reference system is set to that of the
  input \code{LAS} object, or to its horizontal component if the input object
  has a compound (horizontal plus vertical) CRS.
}
\description{
Given an input \code{LAS} object, this function returns an \code{sf} spatial
data frame with a convex polygon for each flight line or, optionally, each
combination of flight line and point class. The default is to only consider
the ground class (2) and the vegetation classes (3-5). Drawing the resulting
polygons grouped by point class (see example below) can help in checking for
biased representation of point classes in overlap areas.
}
\examples{
\dontrun{
library(ggplot2)

fl_polys <- get_flightline_polygons(las, group_classes = TRUE)

# Draw flight line polygons separately for each point class
ggplot(data = fl_polys) +
  geom_sf(aes(fill = factor(flightlineID)), alpha = 0.4) +
  facet_wrap(~ Classification)
}

}

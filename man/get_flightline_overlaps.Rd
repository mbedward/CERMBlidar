% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flightline_functions.R
\name{get_flightline_overlaps}
\alias{get_flightline_overlaps}
\title{Identifies overlapping and non-overlapping parts of flight line polygons.}
\usage{
get_flightline_overlaps(polys)
}
\arguments{
\item{polys}{An \code{sf} data frame of polygons as returned by function
\code{get_flightline_polygons}.}
}
\value{
An \code{sf} data frame of polygons for the separate and overlapping
  parts of flight lines, with columns: \code{overlap} (character label; either
  'overlapping' or 'separate'), \code{flightlineIDs} (character label; single integer
  for separate parts, or colon-separated integers for overlapping parts, e.g. \code{'2:4'});
  \code{area} polygon area in map units; \code{geometry}.
}
\description{
Given a set of flight line polygons created with function
\code{get_flightline_polygons}, this function creates a new set of
polygons representing the overlapping and non-overlapping parts. Note: at
present, point classes are not considered separately. If the input \code{sf}
data frame of polygons includes a \code{Classification} column, the polygons
for each class will be merged prior to identifying overlap and non-overlap
parts.
}
\examples{
\dontrun{
library(ggplot2)

fl_polys <- get_flightline_polys(las)
ov_polys <- get_flightline_overlaps(fl_polys)

# Calculate polygon centroids to position labels
centroids <- sf::st_centroid(ov_polys)

# Draw polygons for overlapping and non-overlapping areas
ggplot(data = ov_polys) +
  geom_sf() +
  geom_sf_text(data = centroids, aes(label = flightlineIDs)) +
  coord_sf(datum = st_crs(ov_polys)) +
  labs(x = "", y = "") +
  facet_wrap(~overlap)
}

}
